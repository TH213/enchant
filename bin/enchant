#!/usr/bin/env ruby
require 'enchant'
require 'rainbow'
require 'getoptlong'

opts = GetoptLong.new(
  [ '--help', '-h', GetoptLong::NO_ARGUMENT ],
  [ '--version', '-v', GetoptLong::NO_ARGUMENT ],
  [ '--verbose', '-V', GetoptLong::NO_ARGUMENT ],
  [ '--wordlist', '-w', GetoptLong::REQUIRED_ARGUMENT ]
)

trap("INT") { puts '['+'INTERRUPTED'.color(:red)+']'; exit -1 }

options = { :verbose=>false, :wordlist=>'basic.txt', :host=>nil, :port=>80, :domain=>nil }

opts.each do |opt, arg|
  case opt
  when '--help'
    Enchant::Engine.help
    exit 0
  when '--verbose'
    options[:verbose]=true
  when '--version'
    puts "enchant #{Enchant::Version.version}"
    exit 0
  when '--wordlist'
    options[:wordlist] = arg
  end
end

if ARGV.length != 1
  puts "missing target".color(:red)
  Enchant::Engine.help
  exit -1
end

url = ARGV.shift
host = url.split(':')[0] ||= "localhost"    # fallback here should never occur... however it's better to be paranoid
port = url.split(':')[1] ||= 80             # more common here


puts "sending probes to #{host}@#{port}"

e = Enchant::Engine.new(options)
count = e.scan

puts "#{count} urls open found".color(:green)
exit 0
